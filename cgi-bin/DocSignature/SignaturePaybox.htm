<html>
<head>
<title>Signature Paybox</title>
<meta http-equiv="Content-Language" content="fr">
<style type="text/css">
p, .NormalText
{
    Font-family : sans-serif;
    Font : Arial;
    Font-size : smaller;
}
.Titre
{
    Font-family : sans-serif;
    Font : Arial;
    Font-weight : bold;
}
.PageBody
{
    background-color : white;
}
</style>
</head>

<body bgcolor=white lang=FR link=blue vlink=blue>

<p>
<a href="#Introduction">Introduction</a> | <a href="#Signature">Signature Paybox | <a href="#Verification">V&eacute;rification de la signature | <a href="#Tests">Tests</a> | <a href="#Encodage">Encodage</a> | <a href="#SignaturenonVerifie">Signature non v&eacute;rifi&eacute;e</a>
</p>

<p><a class="Titre" name="Introduction">Introduction</a> :</p>
Pour se familiariser avec les notions de base en cryptographie, vous pouvez consulter le document PbxCryptoDoc.pdf

<p><a class="Titre" name="Signature">Signature Paybox</a> :</p>
La signature Paybox est produite en chiffrant un condens&eacute; SHA-1 avec une cl&eacute; priv&eacute;e RSA.<br>
La taille d'une empreinte SHA-1 &eacute;tant de 160 bits et la cl&eacute; Paybox faisant 1024 bits de long, la signature est toujours une valeur binaire de taille [fixe] 128 octets<br>
(172 octets en Base64).

<p><a class="Titre" name="Verification">V&eacute;rification de la signature</a> :</p>
De part sa nature, la signature Paybox peut se v&eacute;rifier directement dans les langages les plus r&eacute;pandus sur le web.<br>
Par exemple en PHP, il suffit d'utiliser la fonction '<font color="green">openssl_verify()</font>' et en Java, la methode <font color="green">verify()</font> en pr&eacute;cisant "<font color="green">SHA1withRSA</font>".<br>
A cet effet, vous pouvez consulter les exemples joints.<br>
On peut aussi utiliser d'autres langages, packages, composants ou utilitaires, qui peuvent demander de prendre en charge les op&eacute;rations interm&eacute;diaires (condens&eacute; ou chiffrement).<br>
Dans tous les cas, il faut utiliser la cl&eacute; publique Paybox, disponible en t&eacute;l&eacute;chargement.<br>

<p><a class="Titre" name="Tests">Tests</a> :</p>
La facon la plus souple de tester un programme de v&eacute;rification de signature dans votre environnement,
est d'utiliser une paire de cl&eacute; RSA de test.<br>
Vous serez ainsi en mesure de signer vous-m&ecirc;me des messages dont vous pourrez v&eacute;rifier la signature.<br>
Ensuite, il suffira de substituer la cl&eacute; publique de test par la cl&eacute; publique Paybox.<br>
<br>
exemple avec OpenSSL <font color="darkgray">(http://www.openssl.org/docs/apps/openssl.html)</font> :<br>
pour g&eacute;n&eacute;rer une cl&eacute; priv&eacute;e RSA et en extraire la cl&eacute; publique<br>
<font color="green">
openssl genrsa -out prvkey.pem 1024<br>
openssl rsa -in prvkey.pem -pubout -out pubkey.pem<br>
</font>
<br>
signature :<br>
<font color="green">
openssl dgst -sha1 -binary -sign prvkey.pem -out sig.bin data.txt<br>
openssl base64 -in sig.bin -out sig64.txt<br>
rm sig.bin<br>
</font>
<br>
verification :<br>
<font color="green">
openssl base64 -d -in sig64.txt -out sig.bin<br>
openssl dgst -sha1 -binary -verify pubkey.pem -signature sig.bin data.txt
</font>
<br>

<p><a class="Titre" name="Encodage">Encodage</a> :</p>
Les messages et signatures transport&eacute;s au moyen du protocoles HTTP (GET ou POST) doivent &ecirc;tre sur-encod&eacute;s (URL encodage et/ou Base64).<br>
De ce fait il faut proc&eacute;der aux op&eacute;rations inverses avant de v&eacute;rifier la signature :<br>
1) d&eacute;tacher la signature du message,<br>
2) URL d&eacute;coder la signature,<br>
3) d&eacute;codage Base64 de la signature,<br>
4) v&eacute;rification de la signature [binaire] sur les donn&eacute;es (toujours encod&eacute;es)<br>
<br>
Donn&eacute;es sign&eacute;es :<br>
a) lors de la r&eacute;ponse Paybox de serveur &agrave; serveur (URL direct), seules les informations demand&eacute;es dans la variable PBX_RETOUR sont sign&eacute;es,<br>
b) dans les 3 autres cas (redirection via le navigateur du client, PBX_EFFECTUE, PBX_REFUSE et PBX_ANNULE ),<br>
ce sont toutes les donn&eacute;es suivant le '</font><font color="red"><b> ? </b></font>' (les parametres URL).<br>
<br>
ex.: <font color="darkgray">http://</font> www.moncommerce.com <font color="brown">/mondir/moncgi.php</font><font color="red"><b> ? </b></font><font color="orange">monparam=mavaleur&</font> <font color="magenta">pbxparam1=val1&pbxparam2=val2 ...</font> &sign=<font color="green">df123dsfd3...1f1ffsre%20t321rt1t3e=</font><br>
<br>
la signature (<font color="green">df123dsfd3...1f1ffsre%20t321rt1t3e=</font>) porte sur la partie :<br>
cas a)&nbsp;&nbsp;<font color="magenta">pbxparam1=val1&pbxparam2=val2 ...</font><br>
cas b)&nbsp;&nbsp;<font color="orange">monparam=mavaleur&</font> <font color="magenta">pbxparam1=val1&pbxparam2=val2 ...</font><br>
<br>
Rappel : si la signature n'est pas la derni&egrave;re valeur demand&eacute;e dans la liste PBX_RETOUR, les valeurs suivantes seront retourn&eacute;es, mais pas sign&eacute;es.

<p><a class="Titre" name="SignaturenonVerifie">Signature non v&eacute;rifi&eacute;e</a> :</p>
Si une signature ne peut &ecirc;tre v&eacute;rifi&eacute;e, alors les cas suivants doivent être envisag&eacute;s :<br>
- erreur technique : bogue, environnement cryptographique mal initialis&eacute; ou mal configur&eacute;, ...<br>
- utilisation d'une cl&eacute; &eacute;rron&eacute;e,<br>
- donn&eacute;es alt&eacute;r&eacute;es ou signature contrefaite.<br>
Le dernier cas est peu probable, mais grave. Il doit conduire &agrave; la recherche d'une intrusion dans les syst&egrave;mes d'informations impliqu&eacute;s.<br>

<p>
<a href="#Introduction">Introduction</a> | <a href="#Signature">Signature Paybox | <a href="#Verification">V&eacute;rification de la signature | <a href="#Tests">Tests</a> | <a href="#Encodage">Encodage</a> | <a href="#SignaturenonVerifie">Signature non v&eacute;rifi&eacute;e</a>
</p>

</body>

</html>
